swagger: "2.0"
info:
  description: "Sample project using micronaut and api gateway"
  version: "1.0.0"
  title: "Product Serverless Service"
host: "products.swagger.io"
tags:
  - name: "products"
    description: "product endpoints"
schemes:
  - "https"
  - "http"
paths:
  /products:
    post:
      tags:
        - "products"
      summary: "Add a new products"
      description: ""
      operationId: "addProduct"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Product object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/ProductRequest"
  /products/{productId}:
    get:
      tags:
        - "products"
      summary: "Find product by ID"
      description: "Returns a single product"
      operationId: "getProductById"
      produces:
        - "application/json"
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of product to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProductResponse"
    put:
      tags:
        - "products"
      summary: "Update existent product by ID"
      description: "Update a single product"
      operationId: "updateProductById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of product to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProductRequest"
    delete:
      tags:
        - "products"
      summary: "Delete product by ID"
      description: "Delete a single product"
      operationId: "deleteProductById"
      produces:
        - "application/json"
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of product to return"
          required: true
          type: "string"
      responses:
        "204":
          description: "successful operation"
definitions:
  ProductRequest:
    type: "object"
    properties:
      name:
        type: "string"
      price:
        type: "number"
      description:
        type: "string"
      category:
        type: "string"
  ProductResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      price:
        type: "number"
      description:
        type: "string"
      category:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"